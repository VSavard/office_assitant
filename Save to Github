{"name":"Save to Github","active":false,"nodes":[{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"name":"When clicking ‘Execute workflow’"},{"parameters":{"batchSize":"=1","options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"name":"Loop Over Items"},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"value":"VSavard","mode":"name"},"repository":{"__rl":true,"value":"office_assitant","mode":"list","cachedResultName":"office_assitant","cachedResultUrl":"https://github.com/VSavard/office_assitant"},"filePath":"={{ $json.data[0].name }}","additionalParameters":{}},"type":"n8n-nodes-base.github","typeVersion":1.1,"name":"Get a file","webhookId":"ee93f18c-4e93-4d10-ba08-b13212dd16fe","credentials":{"githubApi":{"id":"cQnjCwN3BOF9jGTC","name":"GitHub account"}},"onError":"continueRegularOutput"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"3929bcf0-75a5-480f-98ab-aa5fedd04136","leftValue":"={{ $json.error }}","rightValue":"","operator":{"type":"string","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"name":"If"},{"parameters":{"resource":"file","owner":{"__rl":true,"value":"VSavard","mode":"name"},"repository":{"__rl":true,"value":"office_assitant","mode":"list","cachedResultName":"office_assitant","cachedResultUrl":"https://github.com/VSavard/office_assitant"},"filePath":"={{ $('Loop Over Items').item.json.data[0].name }}","fileContent":"={{ $('Loop Over Items').item.json.data[0].nodes }}","commitMessage":"[CREATE] New workflow: {{ $('Loop Over Items').item.json.data[0].name }}"},"type":"n8n-nodes-base.github","typeVersion":1.1,"name":"Create a file","webhookId":"43cad2d6-86ee-4d53-9c20-12529378b9cf","credentials":{"githubApi":{"id":"cQnjCwN3BOF9jGTC","name":"GitHub account"}}},{"parameters":{"jsCode":"// La variable 'items' contient tous les objets JSON passés par le nœud précédent\nfor (const item of items) {\n    const workflow = JSON.parse(JSON.stringify(item.json));\n\n    // 1. Nettoyage des métadonnées (Laissez cette partie telle quelle)\n    delete workflow.id;             \n    delete workflow.createdAt;     \n    delete workflow.updatedAt;     \n    delete workflow.versionId;     \n    delete workflow.active;        \n    delete workflow.draft;         \n\n    // ... (Suppression des propriétés des nœuds si nécessaire)\n    if (workflow.nodes) {\n        for (const node of workflow.nodes) {\n            delete node.id;\n            delete node.position;\n        }\n    }\n\n    // 3. CORRECTION : Créer un nom de fichier propre et sécurisé\n    \n    // Assurez-vous que workflow.name est une chaîne de caractères\n    let baseName = 'untitled_workflow'; // Nom par défaut\n    \n    // Si le nom du workflow existe et est une chaîne, on l'utilise\n    if (workflow.name && typeof workflow.name === 'string') {\n        baseName = workflow.name;\n    } \n    // Optionnel : Si le nom est manquant, mais qu'il y a un ID, utilisez l'ID de l'item original\n    else if (item.id) {\n        baseName = `workflow_id_${item.id}`;\n    }\n\n    // Nettoyage du nom : remplacement des caractères spéciaux par des underscores\n    const safeName = baseName.replace(/[^a-zA-Z0-9\\s]/g, '').trim().replace(/\\s+/g, '_');\n    \n    // Stockage du nom de fichier dans l'objet workflow\n    workflow.fileName = `${safeName || 'error_fallback'}.json`; // Fallback final au cas où\n\n    // Mettre à jour l'élément d'entrée avec le workflow nettoyé et le nom de fichier\n    item.json = workflow;\n}\n\nreturn items;"},"type":"n8n-nodes-base.code","typeVersion":2,"name":"Cleaning","alwaysOutputData":false},{"parameters":{"url":"http://localhost:5678/api/v1/workflows","authentication":"predefinedCredentialType","nodeCredentialType":"n8nApi","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"name":"n8n Workflows list","credentials":{"n8nApi":{"id":"3mT5jEbuYRoGBFJT","name":"n8n account"}}}],"connections":{"When clicking ‘Execute workflow’":{"main":[[{"node":"n8n Workflows list","type":"main","index":0}]]},"Loop Over Items":{"main":[[{"node":"Get a file","type":"main","index":0}],[{"node":"Cleaning","type":"main","index":0}]]},"Get a file":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"Create a file","type":"main","index":0}]]},"Cleaning":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"n8n Workflows list":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"shared":[{"createdAt":"2025-10-06T22:25:26.809Z","updatedAt":"2025-10-06T22:25:26.809Z","role":"workflow:owner","workflowId":"53iVkXOj2S1p0PVC","projectId":"ZN7EQrby3NVFgp8q"}],"tags":[]}